/* sidebars */
#sidebar
{
    background-color: var(--background-secondary);
    display: flex;
    width: max-content;
}

#sidebar-left
{
    border-right: 1px dashed var(--border-color);
}

#sidebar-right
{
    border-left: 1px dashed var(--border-color);
}

.flex-container
{
    background-color: var(--background-color);
    display: flex;
    flex-direction: row;
    justify-content: center;
    height: 100%;
    width: 100%;
}

.markdown-reading-view
{
    align-self: center;
    -ms-flex-align: center;
    width: 100%;
}

@media print 
{
    #sidebar, #sideabr-right, #sidebar-left, .outline-container, .toggle, .toggle_inline, .toggle__fill, .toggle__input
    {
        display: none !important;
    }
}

@media screen and (max-width: 900px)
{
    #sidebar, #sideabr-right, #sidebar-left, .outline-container
    {
        display: none !important;
    }
}

/* outline style */
.outline-container
{
    width: 100%;
    margin: 10px;
    margin-top: 20px;
    height: min-content;
    white-space: nowrap;
    line-height: 1.6em;
}

.theme-dark .outline-control
{
    background: url('https://api.iconify.design/lucide/chevron-down.svg?color=white') no-repeat center center / contain;
}

.theme-light .outline-control
{
    background: url('https://api.iconify.design/lucide/chevron-down.svg?color=black') no-repeat center center / contain;
}

.outline-control
{
    transition: transform 0.2s;
    transform: rotate(0deg) translateY(2px);
    width: 1em;
    height: 1em;
    display: inline-block;
    white-space: nowrap;
}

.is-collapsed.outline-control
{
    transform: rotate(-90deg) translateX(-2px);
}

.outline-control[data-size="1"]
{
    margin-left: 0;
}

.outline-control[data-size="2"]
{
    margin-left: 1em;
}

.outline-control[data-size="3"]
{
    margin-left: 2em;
}

.outline-control[data-size="4"]
{
    margin-left: 3em;
}

.outline-control[data-size="5"]
{
    margin-left: 4em;
}

.outline-control[data-size="6"]
{
    margin-left: 5em;
}

.outline-control[data-size="1"] + .outline-header
{
    color: var(--h1-color);
    font-family: var(--h1-font);
}

.outline-control[data-size="2"] + .outline-header
{
    color: var(--h2-color);
    font-family: var(--h2-font);
}

.outline-control[data-size="3"] + .outline-header
{
    color: var(--h3-color);
    font-family: var(--h3-font);
}

.outline-control[data-size="4"] + .outline-header
{
    color: var(--h4-color);
    font-family: var(--h4-font);
}

.outline-control[data-size="5"] + .outline-header
{
    color: var(--h5-color);
    font-family: var(--h5-font);
}

.outline-control[data-size="6"] + .outline-header
{
    color: var(--h6-color);
    font-family: var(--h6-font);
}

.outline-header
{
    width: max-content;
    margin-left: 1em;
    box-sizing: content-box;
    text-decoration: none;
    font-weight: bold;
    text-rendering: optimizeLegibility;
    white-space: nowrap;
    display: inline;
}

.outline-header::before
{
    content: attr(data-content);
    display: inherit;
    width: auto;
    height: 1em;
    padding: 1em;
    padding-bottom: 0.5em;
    padding-top: 0;
    background-color: var(--interactive-normal);
    border-radius: 0.4em;
    position: absolute;
}

.outline-header::after
{
    content: '';
    display: block;
    clear: both;
}

.outline-header:hover::before
{
    cursor: pointer;
    background-color: var(--interactive-hover);
    text-decoration: underline;
}

.outline-header:active::before
{
    background-color: var(--background-primary-alt);
}




/* mobile support for obsidian columns plugin */
.columnParent {
    display: flex;
    padding: 15px 20px;
    flex-wrap: wrap;
    gap: 20px;
}

.columnParent {
    white-space: normal;
}

.cm-preview-code-block .admonition-content .columnParent p {
    white-space: pre-wrap;
}

.columnChild {
    flex-grow: 1;
    flex-basis: 0px;
}

/* sortable plugin fix */
.markdown-preview-view th,
.table-view-table > thead > tr > th,
.markdown-source-view.mod-cm6 .dataview.table-view-table thead.table-view-thead tr th {
    /* background-image: none;
    background-repeat: no-repeat;
    background-position: right, left;
    padding-right: 21px;
    padding-left: 21px; */
    cursor: pointer;
}

th[sortable-style="sortable-asc"], th[sortable-style="sortable-desc"]
{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: left;
}

th[sortable-style="sortable-asc"]::after 
{
    height: 100%;
    position: relative;
    content: "▲";
    display: flex;
}

th[sortable-style="sortable-desc"]::after {
    height: 100%;
    position: relative;
    content: "▼";
    display: flex;
}

/* Toggle Styles */
.toggle {
    --toggle-width: 50px;
    --toggle-height: calc(var(--toggle-width) / 2.2);
    --border-radius: calc(var(--toggle-height) / 2);
    --handle-width: calc(var(--toggle-height) * 0.6);
    --handle-radius: calc(var(--handle-width) / 2);
    --handle-margin: calc((var(--toggle-height) - var(--handle-width)) / 2);
    --handle-translation: calc(var(--toggle-width) - var(--handle-width) - (var(--handle-margin) * 2));

    display: inline-block;
    cursor: pointer;
    position: fixed;
    top: 10px;
    left: 10px;
    z-index: 1000;
}

.toggle_inline {
    --toggle-width: 50px;
    --toggle-height: calc(var(--toggle-width) / 2.2);
    --border-radius: calc(var(--toggle-height) / 2);
    --handle-width: calc(var(--toggle-height) * 0.6);
    --handle-radius: calc(var(--handle-width) / 2);
    --handle-margin: calc((var(--toggle-height) - var(--handle-width)) / 2);
    --handle-translation: calc(var(--toggle-width) - var(--handle-width) - (var(--handle-margin) * 2));

    display: inline-block;
    cursor: pointer;
    position: relative;

    margin-top: 10px;
    margin-bottom: 10px;
}

/* animation to expand width, move handle, then contract width */
@keyframes toggle-slide-right
{
    0%
    {
        width: var(--handle-width);
        transform: translateX(0);
    }
    50%
    {
        width: calc(var(--toggle-width) * 0.5);
    }
    90%
    {
        width: var(--handle-width);
    }
    100%
    {
        transform: translateX(var(--handle-translation));
    }
}

@keyframes toggle-slide-left
{
    0%
    {
        width: var(--handle-width);
        transform: translateX(calc(var(--handle-translation) - ((var(--toggle-width) * 0.33) - var(--handle-width))));
    }
    70%
    {
        width: calc(var(--toggle-width) * 0.5);
    }
    100%
    {
        width: var(--handle-width);
        transform: translateX(0);
    }
}

/* just exapnd and contract */
@keyframes toggle-expand-right
{
    0%
    {
        width: var(--handle-width);
    }
    100%
    {
        width: calc(var(--toggle-width) * 0.33);
    }
}

@keyframes toggle-expand-left
{
    0%
    {
        width: var(--handle-width);
        transform: translateX(var(--handle-translation));
    }
    100%
    {
        width: calc(var(--toggle-width) * 0.33);
        transform: translateX(calc(var(--handle-translation) - ((var(--toggle-width) * 0.33) - var(--handle-width))));
    }
}

@keyframes toggle-contract
{
    0%
    {
        width: calc(var(--toggle-width) * 0.33);
    }
    100%
    {
        width: var(--handle-width);
    }
}

.toggle__input {
    display: none;
    z-index: 1000;
}

/* Fill in dark mode / default */
.toggle__fill {
    position: relative;
    width: var(--toggle-width);
    height: var(--toggle-height);
    border-radius: var(--border-radius);
    background-color: var(--interactive-normal);
    transition: background-color 0.2s;
    z-index: 1000;

    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.2);
}

/* Fill in light mode */
.toggle__input:checked ~ .toggle__fill 
{

}

/* Handle default */
.toggle__fill::before 
{
    content: "";
    position: absolute;
    left: var(--handle-margin);
    top: var(--handle-margin);
    height: var(--handle-width);
    width: var(--handle-width);
    
    border-radius: var(--handle-radius);
    background-color: var(--text-normal);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.2);
    animation: toggle-slide-left 0.2s ease-in-out normal both;

    z-index: 1000;
}

/* handle light*/
.toggle__input:checked ~ .toggle__fill::before 
{
    animation: toggle-slide-right 0.2s ease-in-out normal both;
}

.toggle__input:active ~ .toggle__fill::before 
{
    animation: toggle-expand-right 0.2s ease-in-out normal both;
}

.toggle__input:active:checked ~ .toggle__fill::before
{
    animation: toggle-expand-left 0.2s ease-in-out normal both;
}

/* sun moon icon icon default */
.toggle__fill::after
{
    content: "";
    position: absolute;
    right: var(--handle-margin);
    top: var(--handle-margin);
    height: var(--handle-width);
    width: var(--handle-width);
    scale: 90%;
    transition: transform 0.3s;

    background: url('https://api.iconify.design/lucide/moon.svg?color=white') no-repeat center center;
}

/* sun moon icon icon light */
.toggle__input:checked ~ .toggle__fill::after
{
    transform: translate3d(calc(var(--handle-translation) * -1), 0, 0);
    background: url('https://api.iconify.design/lucide/sun.svg') no-repeat center center;
}




